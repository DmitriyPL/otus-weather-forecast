{"version":3,"file":"main.js","mappings":"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","sources":["webpack://otus-weather-forecast/./src/workWithAPI.js","webpack://otus-weather-forecast/./src/yandexMAP.js","webpack://otus-weather-forecast/./src/workWithList.js","webpack://otus-weather-forecast/./src/index.js","webpack://otus-weather-forecast/./src/showWeather.js"],"sourcesContent":["const APIKEY_WEATHER = \"21ca9df46444fbd55278f1acab840a5a\"; // process.env.APIKEY_YANDEXMAP\n\nexport async function getGeo() {\n  let reqpath = \"https://get.geojs.io/v1/ip/geo.json\";\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nexport async function getWeatherByGeo(geo) {\n  const lat = geo[\"latitude\"];\n  const lon = geo[\"longitude\"];\n  let reqpath = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${APIKEY_WEATHER}`;\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nexport async function getWeatherByCityName(cityName) {\n  let reqpath = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${cityName}&appid=${APIKEY_WEATHER}`;\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n","export let map;\n\nexport function mapInit() {\n  map = new ymaps.Map(\"map\", {\n    center: [55.76, 37.64],\n    zoom: 10,\n  });\n}\n","import { getWeatherByCityName } from \"../src/workWithAPI.js\";\nimport { showWeather } from \"../src/showWeather.js\";\nimport { map } from \"../src/yandexMAP.js\";\n\nexport function saveList(key, items) {\n  localStorage.setItem(key, JSON.stringify(items));\n}\n\nexport function readList(key) {\n  const items = JSON.parse(localStorage.getItem(key));\n  return items === null ? [] : items;\n}\n\nexport function addCityInList(event, items) {\n  const formEl = event.target;\n  const input = formEl.querySelector(\"input\");\n  const { value } = input;\n  input.value = \"\";\n\n  items.push(value);\n\n  if (items.length > 10) {\n    items.shift();\n  }\n\n  return value;\n}\n\nexport function drawList(items) {\n  const listEl = document.querySelector(\"#list\");\n\n  listEl.innerHTML = \"\";\n\n  const olEl = document.createElement(\"ol\");\n\n  items.forEach((city) => {\n    let liEl = document.createElement(\"li\");\n    liEl.innerText = city;\n    liEl.addEventListener(\"click\", clickLiElHandler);\n    liEl.onmouseover = liEl.onmouseout = changeLiBackground;\n\n    olEl.appendChild(liEl);\n  });\n\n  listEl.appendChild(olEl);\n}\n\nasync function clickLiElHandler(event) {\n  event.preventDefault();\n\n  const el = event.target;\n  const weatherInfo = await getWeatherByCityName(el.innerText);\n  if (weatherInfo.cod === \"404\") {\n    weatherInfo.name = \"city not found\";\n  } else {\n    let lat = weatherInfo.coord.lat;\n    let lon = weatherInfo.coord.lon;\n    map.setCenter([lat, lon]);\n  }\n  showWeather(weatherInfo);\n}\n\nfunction changeLiBackground(event) {\n  if (event.type == \"mouseover\") {\n    event.target.style.background = \"grey\";\n  }\n  if (event.type == \"mouseout\") {\n    event.target.style.background = \"\";\n  }\n}\n","import \"../css/normalize.css\";\nimport \"../css/style.css\";\nimport {\n  saveList,\n  readList,\n  addCityInList,\n  drawList,\n} from \"../src/workWithList.js\";\nimport { getWeatherByCityName } from \"../src/workWithAPI.js\";\nimport { showWeather, showCurrentWeather } from \"../src/showWeather.js\";\nimport { map, mapInit } from \"../src/yandexMAP.js\";\n\nfunction submitHandler(formEl, cities) {\n  formEl.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const cityName = addCityInList(event, cities);\n    drawList(cities);\n    saveList(\"list\", cities);\n\n    const weatherInfo = await getWeatherByCityName(cityName);\n    if (weatherInfo.cod === \"404\") {\n      weatherInfo.name = \"city not found\";\n    } else {\n      let lat = weatherInfo.coord.lat;\n      let lon = weatherInfo.coord.lon;\n      map.setCenter([lat, lon]);\n    }\n    showWeather(weatherInfo);\n  });\n}\n\nfunction main() {\n  const formEl = document.querySelector(\"form\");\n  const cities = readList(\"list\");\n\n  ymaps.ready(mapInit);\n  showCurrentWeather();\n  drawList(cities);\n  submitHandler(formEl, cities);\n}\n\nmain();\n\n// eslint-disable-next-line no-unused-vars\n/* eslint-disable no-param-reassign */\n","import { map } from \"../src/yandexMAP.js\";\nimport { getGeo, getWeatherByGeo } from \"../src/workWithAPI.js\";\n\nexport function showWeather(weatherInfo) {\n  const weatherInfoEl = document.querySelector(\"#weather-info\");\n  let innerHTML = \"\";\n  if (Object.prototype.hasOwnProperty.call(weatherInfo, \"weather\")) {\n    innerHTML = `<h1>${weatherInfo.name}</h1>\n      <img src=\"http://openweathermap.org/img/wn/${weatherInfo.weather[0].icon}@2x.png\" alt=\"Weather icon\">`;\n  } else {\n    innerHTML = `<h1>${weatherInfo.name}</h1>\n      <div class=\"not-found\"></div>`;\n  }\n  weatherInfoEl.innerHTML = innerHTML;\n}\n\nexport async function showCurrentWeather() {\n  const geo = await getGeo();\n  let weatherInfo = await getWeatherByGeo(geo);\n  if (weatherInfo.cod === \"404\") {\n    weatherInfo.name = \"city not found\";\n  } else {\n    const lat = geo[\"latitude\"];\n    const lon = geo[\"longitude\"];\n    map.setCenter([lat, lon]);\n  }\n  showWeather(weatherInfo);\n}\n"],"names":["map","items","formEl","cities","APIKEY_WEATHER","getGeo","fetch","resp","json","getWeatherByGeo","geo","lat","lon","reqpath","getWeatherByCityName","cityName","i","showWeather","weatherInfo","innerHTML","weatherInfoEl","document","querySelector","Object","prototype","hasOwnProperty","call","name","weather","icon","cod","setCenter","addCityInList","event","input","target","value","push","length","shift","drawList","listEl","olEl","createElement","forEach","city","liEl","innerText","addEventListener","clickLiElHandler","onmouseover","onmouseout","changeLiBackground","appendChild","preventDefault","el","coord","type","style","background","JSON","parse","localStorage","getItem","ymaps","ready","Map","center","zoom","showCurrentWeather","setItem","stringify","submitHandler"],"sourceRoot":""}