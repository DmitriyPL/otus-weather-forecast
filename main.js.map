{"version":3,"file":"main.js","mappings":"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","sources":["webpack://otus-weather-forecast/./src/index.js","webpack://otus-weather-forecast/./src/workWithList.js"],"sourcesContent":["import \"../css/normalize.css\";\nimport \"../css/style.css\";\nimport { saveList, readList } from \"../src/workWithList.js\";\n\nlet map;\nconst APIKEY_WEATHER = \"21ca9df46444fbd55278f1acab840a5a\"; // process.env.APIKEY_YANDEXMAP\n\nexport function drawList(items) {\n  const listEl = document.querySelector(\"#list\");\n\n  listEl.innerHTML = \"\";\n\n  const olEl = document.createElement(\"ol\");\n\n  items.forEach((city) => {\n    let liEl = document.createElement(\"li\");\n    liEl.innerText = city;\n    liEl.addEventListener(\"click\", clickLiElHandler);\n    liEl.onmouseover = liEl.onmouseout = changeLiBackground;\n\n    olEl.appendChild(liEl);\n  });\n\n  listEl.appendChild(olEl);\n}\n\nasync function clickLiElHandler(event) {\n  event.preventDefault();\n\n  const el = event.target;\n  const weatherInfo = await getWeatherByCityName(el.innerText);\n  if (weatherInfo.cod === \"404\") {\n    weatherInfo.name = \"city not found\";\n  } else {\n    let lat = weatherInfo.coord.lat;\n    let lon = weatherInfo.coord.lon;\n    map.setCenter([lat, lon]);\n  }\n  showWeather(weatherInfo);\n}\n\nfunction changeLiBackground(event) {\n  if (event.type == \"mouseover\") {\n    event.target.style.background = \"grey\";\n  }\n  if (event.type == \"mouseout\") {\n    event.target.style.background = \"\";\n  }\n}\n\nasync function getGeo() {\n  let reqpath = \"https://get.geojs.io/v1/ip/geo.json\";\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nasync function getWeatherByGeo(geo) {\n  const lat = geo[\"latitude\"];\n  const lon = geo[\"longitude\"];\n  let reqpath = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${APIKEY_WEATHER}`;\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nasync function getWeatherByCityName(cityName) {\n  let reqpath = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${cityName}&appid=${APIKEY_WEATHER}`;\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nfunction showWeather(weatherInfo) {\n  const weatherInfoEl = document.querySelector(\"#weather-info\");\n  let innerHTML = \"\";\n  if (Object.prototype.hasOwnProperty.call(weatherInfo, \"weather\")) {\n    innerHTML = `<h1>${weatherInfo.name}</h1>\n    <img src=\"http://openweathermap.org/img/wn/${weatherInfo.weather[0].icon}@2x.png\" alt=\"Weather icon\">`;\n  } else {\n    innerHTML = `<h1>${weatherInfo.name}</h1>\n    <div class=\"not-found\"></div>`;\n  }\n  weatherInfoEl.innerHTML = innerHTML;\n}\n\nasync function showCurrentWeather() {\n  const geo = await getGeo();\n  let weatherInfo = await getWeatherByGeo(geo);\n  if (weatherInfo.cod === \"404\") {\n    weatherInfo.name = \"city not found\";\n  } else {\n    const lat = geo[\"latitude\"];\n    const lon = geo[\"longitude\"];\n    map.setCenter([lat, lon]);\n  }\n  showWeather(weatherInfo);\n}\n\nfunction mapInit() {\n  map = new ymaps.Map(\"map\", {\n    center: [55.76, 37.64],\n    zoom: 7,\n  });\n}\n\nexport function addCityInList(event, items) {\n  const formEl = event.target;\n  const input = formEl.querySelector(\"input\");\n  const { value } = input;\n  input.value = \"\";\n\n  items.push(value);\n\n  if (items.length > 10) {\n    items.shift();\n  }\n\n  return value;\n}\n\nfunction submitHandler(formEl, cities) {\n  formEl.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const cityName = addCityInList(event, cities);\n    drawList(cities);\n    saveList(\"list\", cities);\n\n    const weatherInfo = await getWeatherByCityName(cityName);\n    if (weatherInfo.cod === \"404\") {\n      weatherInfo.name = \"city not found\";\n    } else {\n      let lat = weatherInfo.coord.lat;\n      let lon = weatherInfo.coord.lon;\n      map.setCenter([lat, lon]);\n    }\n    showWeather(weatherInfo);\n  });\n}\n\nfunction main() {\n  const formEl = document.querySelector(\"form\");\n  const cities = readList(\"list\");\n\n  ymaps.ready(mapInit);\n  showCurrentWeather();\n  drawList(cities);\n  submitHandler(formEl, cities);\n}\n\nmain();\n\n// eslint-disable-next-line no-unused-vars\n/* eslint-disable no-param-reassign */\n","export function saveList(key, items) {\n  localStorage.setItem(key, JSON.stringify(items));\n}\n\nexport function readList(key) {\n  const items = JSON.parse(localStorage.getItem(key));\n  return items === null ? [] : items;\n}\n"],"names":["i","map","items","formEl","cities","APIKEY_WEATHER","drawList","listEl","document","querySelector","innerHTML","olEl","createElement","forEach","city","liEl","innerText","addEventListener","clickLiElHandler","onmouseover","onmouseout","changeLiBackground","appendChild","event","preventDefault","el","target","getWeatherByCityName","weatherInfo","cod","name","lat","coord","lon","setCenter","showWeather","type","style","background","getGeo","fetch","resp","json","getWeatherByGeo","geo","reqpath","cityName","weatherInfoEl","Object","prototype","hasOwnProperty","call","weather","icon","addCityInList","input","value","push","length","shift","JSON","parse","localStorage","getItem","ymaps","ready","Map","center","zoom","showCurrentWeather","setItem","stringify","submitHandler"],"sourceRoot":""}