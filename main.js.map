{"version":3,"file":"main.js","mappings":"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","sources":["webpack://otus-weather-forecast/./src/workWithAPI.js","webpack://otus-weather-forecast/./src/workWithList.js","webpack://otus-weather-forecast/./src/index.js","webpack://otus-weather-forecast/./src/yandexMAP.js","webpack://otus-weather-forecast/./src/showWeather.js"],"sourcesContent":["const APIKEY_WEATHER = \"21ca9df46444fbd55278f1acab840a5a\"; // process.env.APIKEY_YANDEXMAP\n\nexport async function getGeo() {\n  let reqpath = \"https://get.geojs.io/v1/ip/geo.json\";\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nexport async function getWeatherByGeo(geo) {\n  const lat = geo[\"latitude\"];\n  const lon = geo[\"longitude\"];\n  let reqpath = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${APIKEY_WEATHER}`;\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nexport async function getWeatherByCityName(cityName) {\n  let reqpath = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${cityName}&appid=${APIKEY_WEATHER}`;\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n","import { getWeatherByCityName } from \"../src/workWithAPI.js\";\nimport { showWeather } from \"../src/showWeather.js\";\nimport { getMap } from \"../src/yandexMAP.js\";\n\nexport function saveList(key, items) {\n  localStorage.setItem(key, JSON.stringify(items));\n}\n\nexport function readList(key) {\n  const items = JSON.parse(localStorage.getItem(key));\n  return items === null ? [] : items;\n}\n\nexport function addCityInList(event, items) {\n  const formEl = event.target;\n  const input = formEl.querySelector(\"input\");\n  const { value } = input;\n  input.value = \"\";\n\n  items.push(value);\n\n  if (items.length > 10) {\n    items.shift();\n  }\n\n  return value;\n}\n\nexport function drawList(items) {\n  const listEl = document.querySelector(\"#list\");\n\n  listEl.innerHTML = \"\";\n\n  const olEl = document.createElement(\"ol\");\n\n  items.forEach((city) => {\n    let liEl = document.createElement(\"li\");\n    liEl.innerText = city;\n    liEl.addEventListener(\"click\", clickLiElHandler);\n    liEl.onmouseover = liEl.onmouseout = changeLiBackground;\n\n    olEl.appendChild(liEl);\n  });\n\n  listEl.appendChild(olEl);\n}\n\nasync function clickLiElHandler(event) {\n  event.preventDefault();\n\n  const el = event.target;\n  const weatherInfo = await getWeatherByCityName(el.innerText);\n\n  if (weatherInfo.cod === \"404\") {\n    weatherInfo.name = \"city not found\";\n  } else {\n    let lat = weatherInfo.coord.lat;\n    let lon = weatherInfo.coord.lon;\n    getMap(lat, lon);\n  }\n\n  showWeather(weatherInfo);\n}\n\nfunction changeLiBackground(event) {\n  if (event.type == \"mouseover\") {\n    event.target.style.background = \"grey\";\n  }\n  if (event.type == \"mouseout\") {\n    event.target.style.background = \"\";\n  }\n}\n","import \"../src/css/normalize.css\";\nimport \"../src/css/style.css\";\nimport {\n  saveList,\n  readList,\n  addCityInList,\n  drawList,\n} from \"../src/workWithList.js\";\nimport { getWeatherByCityName } from \"../src/workWithAPI.js\";\nimport { showWeather, showCurrentWeather } from \"../src/showWeather.js\";\nimport { getMap } from \"../src/yandexMAP.js\";\n\nfunction submitHandler(formEl, cities) {\n  formEl.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const cityName = addCityInList(event, cities);\n    drawList(cities);\n    saveList(\"list\", cities);\n\n    const weatherInfo = await getWeatherByCityName(cityName);\n    if (weatherInfo.cod === \"404\") {\n      weatherInfo.name = \"city not found\";\n    } else {\n      let lat = weatherInfo.coord.lat;\n      let lon = weatherInfo.coord.lon;\n      getMap(lat, lon);\n    }\n    showWeather(weatherInfo);\n  });\n}\n\nfunction main() {\n  const formEl = document.querySelector(\"form\");\n  const cities = readList(\"list\");\n\n  showCurrentWeather();\n  drawList(cities);\n  submitHandler(formEl, cities);\n}\n\nmain();\n\n// eslint-disable-next-line no-unused-vars\n/* eslint-disable no-param-reassign */\n","export function getMap(lat, lon) {\n  let mapImg = `https://static-maps.yandex.ru/1.x/?ll=${lon},${lat}&z=10&l=map`;\n  let mapEl = document.querySelector(\"#map\");\n  mapEl.style.backgroundImage = `url(${mapImg})`;\n}\n","import { getGeo, getWeatherByGeo } from \"../src/workWithAPI.js\";\nimport { getMap } from \"../src/yandexMAP.js\";\n\nexport function showWeather(weatherInfo) {\n  const weatherInfoEl = document.querySelector(\"#weather-info\");\n  let innerHTML = \"\";\n  if (Object.prototype.hasOwnProperty.call(weatherInfo, \"weather\")) {\n    innerHTML = `<h1>${weatherInfo.name}</h1>\n      <img src=\"http://openweathermap.org/img/wn/${weatherInfo.weather[0].icon}@2x.png\" alt=\"Weather icon\">`;\n  } else {\n    innerHTML = `<h1>${weatherInfo.name}</h1>\n      <div class=\"not-found\"></div>`;\n  }\n  weatherInfoEl.innerHTML = innerHTML;\n}\n\nexport async function showCurrentWeather() {\n  const geo = await getGeo();\n  let weatherInfo = await getWeatherByGeo(geo);\n  if (weatherInfo.cod === \"404\") {\n    weatherInfo.name = \"city not found\";\n  } else {\n    const lat = geo[\"latitude\"];\n    const lon = geo[\"longitude\"];\n    getMap(lat, lon);\n  }\n  showWeather(weatherInfo);\n}\n"],"names":["items","formEl","cities","APIKEY_WEATHER","getGeo","fetch","resp","json","getWeatherByGeo","geo","lat","lon","reqpath","getWeatherByCityName","cityName","getMap","mapImg","document","querySelector","style","backgroundImage","i","showWeather","weatherInfo","innerHTML","weatherInfoEl","Object","prototype","hasOwnProperty","call","name","weather","icon","cod","addCityInList","event","input","target","value","push","length","shift","drawList","listEl","olEl","createElement","forEach","city","liEl","innerText","addEventListener","clickLiElHandler","onmouseover","onmouseout","changeLiBackground","appendChild","preventDefault","el","coord","type","background","JSON","parse","localStorage","getItem","showCurrentWeather","setItem","stringify","submitHandler"],"sourceRoot":""}