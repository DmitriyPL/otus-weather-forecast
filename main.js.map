{"version":3,"file":"main.js","mappings":";yBACA,ICCIA,EAOIC,EAqEAC,EAEAC,EACAC,EAEAC,EACAC,EDnFJC,EAAsB,sPCA1B,smNAGO,SAASC,EAASC,EAAKR,GAC5BS,aAAaC,QAAQF,EAAKG,KAAKC,UAAUZ,IAQpC,SAASa,EAASC,EAAId,GAC3Bc,EAAGC,UAAH,cAAsBf,EAAMD,KAAI,SAACe,GAAD,oBAAeA,EAAf,YAA0BE,KAAK,IAA/D,SAGK,SAASC,EAAcC,EAAOlB,GACnC,IACMmB,EADSD,EAAME,OACAC,cAAc,SAC3BC,EAAUH,EAAVG,MASR,OARAH,EAAMG,MAAQ,GAEdtB,EAAMuB,KAAKD,GAEPtB,EAAMwB,OAAS,IACjBxB,EAAMyB,QAGDH,WAGMI,qEAAf,oGAEmBC,MADH,uCADhB,cAEMC,EAFN,yBAGSA,EAAKC,QAHd,2EAMeC,EAAW,EAAXA,oEAAf,WAA0B7B,EAAQ8B,GAAlC,kGAAyCC,IAAzC,iCACMC,EAAU,GACVD,EACFC,EAAU,kEAAH,OAAqEF,EAArE,kBAAoF9B,IAErFiC,EAAMH,EAAK,SACXI,EAAMJ,EAAK,UACjBE,EAAU,uDAAH,OAA0DC,EAA1D,gBAAqEC,EAArE,kBAAkFlC,IAP7F,SAUmB0B,MAAMM,GAVzB,cAUML,EAVN,yBAWSA,EAAKC,QAXd,mEAcA,SAASO,EAAYtB,EAAIuB,EAAaH,EAAKC,GACzCrB,EAAGC,UAAH,kBACMsB,EAAYC,KADlB,+DAE6CD,EAAYE,QAAQ,GAAGC,KAFpE,oCAIAzC,EAAI0C,UAAU,CAACP,EAAKC,sCAGtB,WAAkCrB,EAAIb,GAAtC,6FACoByB,IADpB,cACQgB,EADR,gBAE0BZ,EAAW7B,EAAQyC,GAAK,GAFlD,OAEML,EAFN,OAGQH,EAAMQ,EAAG,SACTP,EAAMO,EAAG,UACfN,EAAYtB,EAAIuB,EAAaH,EAAKC,GALpC,kEC3DA7B,EAAoBqC,EAAI,SAASC,EAASC,GACzC,IAAI,IAAIrC,KAAOqC,EACXvC,EAAoBwC,EAAED,EAAYrC,KAASF,EAAoBwC,EAAEF,EAASpC,IAC5EuC,OAAOC,eAAeJ,EAASpC,EAAK,CAAEyC,YAAY,EAAMC,IAAKL,EAAWrC,MCJ3EF,EAAoBwC,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,IF8EvFnD,EAAS,mCAETC,EAASsD,SAASnC,cAAc,QAChClB,EAvEW,QADXH,EAAQW,KAAK8C,MAAMhD,aAAaiD,QAwEd,UAvEA,GAAK1D,EAyEvBI,EAASoD,SAASnC,cAAc,SAChChB,EAAgBmD,SAASnC,cAAc,iBAE7CsC,MAAMC,OAjBR,WACE7D,EAAM,IAAI4D,MAAME,IAAI,MAAO,CACzBC,OAAQ,CAAC,MAAO,OAChBC,KAAM,gBAZwB,EAAnBC,2BA6BbA,CAAmB3D,EAAeJ,GAElCY,EAAST,EAAQD,GAEjBD,EAAO+D,iBAAiB,SAAxB,6BAAkC,WAAO/C,GAAP,oFAChCA,EAAMgD,iBAEAC,EAAWlD,EAAcC,EAAOf,GACtCU,EAAST,EAAQD,GACjBI,EAAS,OAAQJ,GALe,SAON2B,EAAW7B,EAAQkE,GAPb,OAO1B9B,EAP0B,OAQ5BH,EAAMG,EAAY+B,MAAMlC,IACxBC,EAAME,EAAY+B,MAAMjC,IAC5BC,EAAY/B,EAAegC,EAAaH,EAAKC,GAVb,4CAAlC","sources":["webpack://otus-weather-forecast/webpack/bootstrap","webpack://otus-weather-forecast/./src/index.js","webpack://otus-weather-forecast/webpack/runtime/define property getters","webpack://otus-weather-forecast/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// import \"../css/file.css\"\n\nlet map;\n\nexport function saveList(key, items) {\n  localStorage.setItem(key, JSON.stringify(items));\n}\n\nexport function readList(key) {\n  const items = JSON.parse(localStorage.getItem(key));\n  return items === null ? [] : items;\n}\n\nexport function drawList(el, items) {\n  el.innerHTML = `<ol>${items.map((el) => `<li>${el}</li>`).join(\"\")}</ol>`;\n}\n\nexport function submitHandler(event, items) {\n  const formEl = event.target;\n  const input = formEl.querySelector(\"input\");\n  const { value } = input;\n  input.value = \"\";\n\n  items.push(value);\n\n  if (items.length > 10) {\n    items.shift();\n  }\n\n  return value;\n}\n\nasync function getGeo() {\n  let reqpath = \"https://get.geojs.io/v1/ip/geo.json\";\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nasync function getWeather(apiKey, param, useCity = true) {\n  let reqpath = \"\";\n  if (useCity) {\n    reqpath = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${param}&appid=${apiKey}`;\n  } else {\n    const lat = param[\"latitude\"];\n    const lon = param[\"longitude\"];\n    reqpath = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}`;\n  }\n\n  let resp = await fetch(reqpath);\n  return resp.json();\n}\n\nfunction showWeather(el, weatherInfo, lat, lon) {\n  el.innerHTML = `\n  <h1>${weatherInfo.name}</h1>\n  <img src=\"http://openweathermap.org/img/wn/${weatherInfo.weather[0].icon}@2x.png\" alt=\"Weather icon\">\n  `;\n  map.setCenter([lat, lon]);\n}\n\nasync function showCurrentWeather(el, apiKey) {\n  const geo = await getGeo();\n  let weatherInfo = await getWeather(apiKey, geo, false);\n  const lat = geo[\"latitude\"];\n  const lon = geo[\"longitude\"];\n  showWeather(el, weatherInfo, lat, lon);\n}\n\n/* eslint-disable no-param-reassign */\nfunction mapInit() {\n  map = new ymaps.Map(\"map\", {\n    center: [55.76, 37.64],\n    zoom: 7,\n  });\n}\n/* eslint-disable no-param-reassign */\n\nfunction main() {\n  const apiKey = \"21ca9df46444fbd55278f1acab840a5a\"; // Храним в переменных окружения\n\n  const formEl = document.querySelector(\"form\");\n  const cities = readList(\"list\");\n\n  const listEl = document.querySelector(\"#list\");\n  const weatherInfoEl = document.querySelector(\"#weather-info\");\n\n  ymaps.ready(mapInit);\n  // eslint-disable-next-line no-unused-vars\n\n  showCurrentWeather(weatherInfoEl, apiKey);\n\n  drawList(listEl, cities);\n\n  formEl.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const cityName = submitHandler(event, cities);\n    drawList(listEl, cities);\n    saveList(\"list\", cities);\n\n    const weatherInfo = await getWeather(apiKey, cityName);\n    let lat = weatherInfo.coord.lat;\n    let lon = weatherInfo.coord.lon;\n    showWeather(weatherInfoEl, weatherInfo, lat, lon);\n  });\n}\n\nmain();\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["map","items","apiKey","formEl","cities","listEl","weatherInfoEl","__webpack_require__","saveList","key","localStorage","setItem","JSON","stringify","drawList","el","innerHTML","join","submitHandler","event","input","target","querySelector","value","push","length","shift","getGeo","fetch","resp","json","getWeather","param","useCity","reqpath","lat","lon","showWeather","weatherInfo","name","weather","icon","setCenter","geo","d","exports","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","document","parse","getItem","ymaps","ready","Map","center","zoom","showCurrentWeather","addEventListener","preventDefault","cityName","coord"],"sourceRoot":""}